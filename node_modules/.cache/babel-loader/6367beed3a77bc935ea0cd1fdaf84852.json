{"ast":null,"code":"import React,{useState}from'react';const Donation=()=>{const[paymentMethod,setPaymentMethod]=useState('paypal');// Default payment method\nconst[cardDetails,setCardDetails]=useState({name:'',number:'',cvv:'',address:'',email:''});const[expiryMonth,setExpiryMonth]=useState('');// State for month\nconst[expiryYear,setExpiryYear]=useState('');// State for year\nconst[amount,setAmount]=useState(1);// Default donation amount\nconst[paypalEmail,setPaypalEmail]=useState('');// For PayPal email\nconst[error,setError]=useState('');const handleCardPayment=event=>{event.preventDefault();// Perform validation for credit card payment\nif(!cardDetails.name||!cardDetails.number||!cardDetails.cvv||!cardDetails.address||!expiryMonth||!expiryYear){setError('Please fill in all credit card fields.');return;}// Handle credit card payment processing here (e.g., call your backend)\nalert('Credit card donation processed!');// Reset form\nsetCardDetails({name:'',number:'',cvv:'',address:'',email:''});setExpiryMonth('');setExpiryYear('');setAmount(1);};const handleChange=e=>{const{name,value}=e.target;if(name in cardDetails){setCardDetails(prev=>({...prev,[name]:value}));}else{setAmount(value);}};const handlePaypalEmailChange=e=>{setPaypalEmail(e.target.value);};const handlePayPalPayment=()=>{// Trigger PayPal payment process\nif(!paypalEmail){setError('Please enter your PayPal email.');return;}// Here, you would ideally trigger the PayPal payment process\nalert(`Redirecting to PayPal for payment from ${paypalEmail}`);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Support the Edo Cultural Association\"),/*#__PURE__*/React.createElement(\"p\",null,\"Your contributions help us to preserve and promote Edo culture through various events and initiatives. Thank you for your support!\"),/*#__PURE__*/React.createElement(\"h3\",null,\"Make a Donation\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",value:\"paypal\",checked:paymentMethod==='paypal',onChange:()=>setPaymentMethod('paypal')}),\"Donate via PayPal\"),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",value:\"creditCard\",checked:paymentMethod==='creditCard',onChange:()=>setPaymentMethod('creditCard')}),\"Donate via Credit Card\")),paymentMethod==='paypal'?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"paypalEmail\"},\"PayPal Email:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",id:\"paypalEmail\",value:paypalEmail,onChange:handlePaypalEmailChange,required:true})),error&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},error),/*#__PURE__*/React.createElement(\"button\",{onClick:handlePayPalPayment},\"Donate to Proceed\")):/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleCardPayment},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:cardDetails.name,onChange:handleChange,required:true})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"number\"},\"Credit Card Number:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"number\",name:\"number\",value:cardDetails.number,onChange:handleChange,required:true})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"expiry\"},\"Expiration Date:\"),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',gap:'10px'}},/*#__PURE__*/React.createElement(\"select\",{id:\"expiryMonth\",value:expiryMonth,onChange:e=>setExpiryMonth(e.target.value),required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\",disabled:true},\"Select Month\"),Array.from({length:12},(_,i)=>/*#__PURE__*/React.createElement(\"option\",{key:i,value:(i+1).toString().padStart(2,'0')},`${i+1} - ${new Date(0,i).toLocaleString('en-US',{month:'long'})}`))),/*#__PURE__*/React.createElement(\"select\",{id:\"expiryYear\",value:expiryYear,onChange:e=>setExpiryYear(e.target.value),required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\",disabled:true},\"Select Year\"),Array.from({length:10},(_,i)=>{const year=new Date().getFullYear()+i;return/*#__PURE__*/React.createElement(\"option\",{key:year,value:year},year);})))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"cvv\"},\"CVV:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"cvv\",name:\"cvv\",value:cardDetails.cvv,onChange:handleChange,required:true})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"address\"},\"Billing Address:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"address\",name:\"address\",value:cardDetails.address,onChange:handleChange,required:true})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:cardDetails.email,onChange:handleChange,required:true})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"amount\"},\"Donation Amount (\\u20AC):\"),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",id:\"amount\",value:amount,onChange:handleChange,required:true,min:\"1\"})),error&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},error),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Donate\")));};export default Donation;","map":{"version":3,"names":["React","useState","Donation","paymentMethod","setPaymentMethod","cardDetails","setCardDetails","name","number","cvv","address","email","expiryMonth","setExpiryMonth","expiryYear","setExpiryYear","amount","setAmount","paypalEmail","setPaypalEmail","error","setError","handleCardPayment","event","preventDefault","alert","handleChange","e","value","target","prev","handlePaypalEmailChange","handlePayPalPayment","createElement","type","checked","onChange","Fragment","htmlFor","id","required","style","color","onClick","onSubmit","display","gap","disabled","Array","from","length","_","i","key","toString","padStart","Date","toLocaleString","month","year","getFullYear","min"],"sources":["C:/Users/king/OneDrive/Desktop/edoculturalassociationitaly/src/donation.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Donation = () => {\r\n    const [paymentMethod, setPaymentMethod] = useState('paypal'); // Default payment method\r\n    const [cardDetails, setCardDetails] = useState({\r\n        name: '',\r\n        number: '',\r\n        cvv: '',\r\n        address: '',\r\n        email: ''\r\n    });\r\n    const [expiryMonth, setExpiryMonth] = useState(''); // State for month\r\n    const [expiryYear, setExpiryYear] = useState(''); // State for year\r\n    const [amount, setAmount] = useState(1); // Default donation amount\r\n    const [paypalEmail, setPaypalEmail] = useState(''); // For PayPal email\r\n    const [error, setError] = useState('');\r\n\r\n    const handleCardPayment = (event) => {\r\n        event.preventDefault();\r\n        // Perform validation for credit card payment\r\n        if (!cardDetails.name || !cardDetails.number || !cardDetails.cvv || !cardDetails.address || !expiryMonth || !expiryYear) {\r\n            setError('Please fill in all credit card fields.');\r\n            return;\r\n        }\r\n        // Handle credit card payment processing here (e.g., call your backend)\r\n        alert('Credit card donation processed!');\r\n        // Reset form\r\n        setCardDetails({ name: '', number: '', cvv: '', address: '', email: '' });\r\n        setExpiryMonth('');\r\n        setExpiryYear('');\r\n        setAmount(1);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name in cardDetails) {\r\n            setCardDetails((prev) => ({ ...prev, [name]: value }));\r\n        } else {\r\n            setAmount(value);\r\n        }\r\n    };\r\n\r\n    const handlePaypalEmailChange = (e) => {\r\n        setPaypalEmail(e.target.value);\r\n    };\r\n\r\n    const handlePayPalPayment = () => {\r\n        // Trigger PayPal payment process\r\n        if (!paypalEmail) {\r\n            setError('Please enter your PayPal email.');\r\n            return;\r\n        }\r\n\r\n        // Here, you would ideally trigger the PayPal payment process\r\n        alert(`Redirecting to PayPal for payment from ${paypalEmail}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Support the Edo Cultural Association</h2>\r\n            <p>Your contributions help us to preserve and promote Edo culture through various events and initiatives. Thank you for your support!</p>\r\n\r\n            <h3>Make a Donation</h3>\r\n\r\n            <div>\r\n                <label>\r\n                    <input \r\n                        type=\"radio\" \r\n                        value=\"paypal\" \r\n                        checked={paymentMethod === 'paypal'} \r\n                        onChange={() => setPaymentMethod('paypal')} \r\n                    />\r\n                    Donate via PayPal\r\n                </label>\r\n                <label>\r\n                    <input \r\n                        type=\"radio\" \r\n                        value=\"creditCard\" \r\n                        checked={paymentMethod === 'creditCard'} \r\n                        onChange={() => setPaymentMethod('creditCard')} \r\n                    />\r\n                    Donate via Credit Card\r\n                </label>\r\n            </div>\r\n\r\n            {paymentMethod === 'paypal' ? (\r\n                <>\r\n                    <div>\r\n                        <label htmlFor=\"paypalEmail\">PayPal Email:</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            id=\"paypalEmail\" \r\n                            value={paypalEmail} \r\n                            onChange={handlePaypalEmailChange} \r\n                            required \r\n                        />\r\n                    </div>\r\n                    {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                    <button onClick={handlePayPalPayment}>Donate to Proceed</button>\r\n                </>\r\n            ) : (\r\n                <form onSubmit={handleCardPayment}>\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name:</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"name\" \r\n                            name=\"name\" \r\n                            value={cardDetails.name} \r\n                            onChange={handleChange} \r\n                            required \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"number\">Credit Card Number:</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"number\" \r\n                            name=\"number\" \r\n                            value={cardDetails.number} \r\n                            onChange={handleChange} \r\n                            required \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"expiry\">Expiration Date:</label>\r\n                        <div style={{ display: 'flex', gap: '10px' }}>\r\n                            <select \r\n                                id=\"expiryMonth\" \r\n                                value={expiryMonth} \r\n                                onChange={(e) => setExpiryMonth(e.target.value)} \r\n                                required\r\n                            >\r\n                                <option value=\"\" disabled>Select Month</option>\r\n                                {Array.from({ length: 12 }, (_, i) => (\r\n                                    <option key={i} value={(i + 1).toString().padStart(2, '0')}>\r\n                                        {`${i + 1} - ${new Date(0, i).toLocaleString('en-US', { month: 'long' })}`}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <select \r\n                                id=\"expiryYear\" \r\n                                value={expiryYear} \r\n                                onChange={(e) => setExpiryYear(e.target.value)} \r\n                                required\r\n                            >\r\n                                <option value=\"\" disabled>Select Year</option>\r\n                                {Array.from({ length: 10 }, (_, i) => {\r\n                                    const year = new Date().getFullYear() + i;\r\n                                    return (\r\n                                        <option key={year} value={year}>\r\n                                            {year}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"cvv\">CVV:</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"cvv\" \r\n                            name=\"cvv\" \r\n                            value={cardDetails.cvv} \r\n                            onChange={handleChange} \r\n                            required \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"address\">Billing Address:</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"address\" \r\n                            name=\"address\" \r\n                            value={cardDetails.address} \r\n                            onChange={handleChange} \r\n                            required \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            value={cardDetails.email} \r\n                            onChange={handleChange} \r\n                            required \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"amount\">Donation Amount (€):</label>\r\n                        <input \r\n                            type=\"number\" \r\n                            id=\"amount\" \r\n                            value={amount} \r\n                            onChange={handleChange} \r\n                            required \r\n                            min=\"1\" \r\n                        />\r\n                    </div>\r\n                    {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                    <button type=\"submit\">Donate</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Donation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}