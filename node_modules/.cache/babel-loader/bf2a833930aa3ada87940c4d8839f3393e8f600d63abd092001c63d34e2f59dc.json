{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\king\\\\OneDrive\\\\Desktop\\\\edoculturalassociationitaly\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/AuthContext.js\n\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false); // Initial state for admin\n\n  const toggleAdmin = () => {\n    setIsAdmin(prevState => !prevState); // Toggle admin state\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAdmin,\n      toggleAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n// Create a custom hook to use the AuthContext\n_s(AuthProvider, \"eOJVfHUUHjCOH+0TSQ/uEMkBEGM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAdmin","setIsAdmin","toggleAdmin","prevState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/king/OneDrive/Desktop/edoculturalassociationitaly/src/AuthContext.js"],"sourcesContent":["// src/AuthContext.js\r\n\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\n// Create the context\r\nconst AuthContext = createContext();\r\n\r\n// Create a provider component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAdmin, setIsAdmin] = useState(false); // Initial state for admin\r\n\r\n    const toggleAdmin = () => {\r\n        setIsAdmin(prevState => !prevState); // Toggle admin state\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAdmin, toggleAdmin }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Create a custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACtBD,UAAU,CAACE,SAAS,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,oBACIR,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,OAAO;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EACjDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAV,EAAA,CAdaF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAezB,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOnB,UAAU,CAACG,WAAW,CAAC;AAClC,CAAC;AAACgB,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}