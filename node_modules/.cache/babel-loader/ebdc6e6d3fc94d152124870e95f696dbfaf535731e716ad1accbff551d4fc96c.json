{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\king\\\\OneDrive\\\\Desktop\\\\edoculturalassociationitaly\\\\src\\\\photosVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotosVideo = () => {\n  _s();\n  const [media, setMedia] = useState([]);\n  const [mediaFile, setMediaFile] = useState(null);\n  const [mediaType, setMediaType] = useState('image'); // Default type is image\n  const [error, setError] = useState(''); // For error messages\n\n  // Simulating admin login state; change to true to test as admin\n  const isAdmin = false; // Change this to true to simulate an admin login\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      // Check file type\n      const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];\n      const validVideoTypes = ['video/mp4', 'video/webm'];\n      if (mediaType === 'image' && !validImageTypes.includes(file.type)) {\n        setError('Please upload a valid image file (JPEG, PNG, GIF).');\n        setMediaFile(null);\n        return;\n      } else if (mediaType === 'video' && !validVideoTypes.includes(file.type)) {\n        setError('Please upload a valid video file (MP4, WEBM).');\n        setMediaFile(null);\n        return;\n      }\n      setError(''); // Clear error if file is valid\n      setMediaFile(file);\n    }\n  };\n  const handleTypeChange = e => {\n    setMediaType(e.target.value);\n    setMediaFile(null); // Reset the file input when type changes\n  };\n  const handleUpload = e => {\n    e.preventDefault();\n    if (mediaFile) {\n      const newMedia = {\n        file: URL.createObjectURL(mediaFile),\n        // Create a URL for the uploaded file\n        type: mediaType\n      };\n      setMedia([...media, newMedia]);\n      setMediaFile(null); // Reset the file input after upload\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photos-video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Photos and Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), isAdmin ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      className: \"upload-form\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Media Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mediaType,\n          onChange: handleTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"video\",\n            children: \"Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [mediaType === 'image' ? 'Upload Image' : 'Upload Video', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: mediaType === 'image' ? 'image/*' : 'video/*',\n          onChange: handleFileChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), mediaFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-preview\",\n        children: mediaType === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(mediaFile),\n          alt: \"Preview\",\n          className: \"preview-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          className: \"preview-video\",\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: URL.createObjectURL(mediaFile),\n            type: mediaFile.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload-button\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You must be an admin to upload media.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-list\",\n      children: media.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media\",\n        children: item.type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.file,\n          alt: `Uploaded Media ${index}`,\n          className: \"media-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          className: \"media-video\",\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: item.file,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(PhotosVideo, \"7VBr5MhZvpN2YR6bDir2J5aMOG0=\");\n_c = PhotosVideo;\nexport default PhotosVideo;\nvar _c;\n$RefreshReg$(_c, \"PhotosVideo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PhotosVideo","_s","media","setMedia","mediaFile","setMediaFile","mediaType","setMediaType","error","setError","isAdmin","handleFileChange","e","file","target","files","validImageTypes","validVideoTypes","includes","type","handleTypeChange","value","handleUpload","preventDefault","newMedia","URL","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","accept","required","src","alt","controls","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/king/OneDrive/Desktop/edoculturalassociationitaly/src/photosVideo.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst PhotosVideo = () => {\r\n    const [media, setMedia] = useState([]);\r\n    const [mediaFile, setMediaFile] = useState(null);\r\n    const [mediaType, setMediaType] = useState('image'); // Default type is image\r\n    const [error, setError] = useState(''); // For error messages\r\n\r\n    // Simulating admin login state; change to true to test as admin\r\n    const isAdmin = false; // Change this to true to simulate an admin login\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            // Check file type\r\n            const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n            const validVideoTypes = ['video/mp4', 'video/webm'];\r\n\r\n            if (mediaType === 'image' && !validImageTypes.includes(file.type)) {\r\n                setError('Please upload a valid image file (JPEG, PNG, GIF).');\r\n                setMediaFile(null);\r\n                return;\r\n            } else if (mediaType === 'video' && !validVideoTypes.includes(file.type)) {\r\n                setError('Please upload a valid video file (MP4, WEBM).');\r\n                setMediaFile(null);\r\n                return;\r\n            }\r\n            setError(''); // Clear error if file is valid\r\n            setMediaFile(file);\r\n        }\r\n    };\r\n\r\n    const handleTypeChange = (e) => {\r\n        setMediaType(e.target.value);\r\n        setMediaFile(null); // Reset the file input when type changes\r\n    };\r\n\r\n    const handleUpload = (e) => {\r\n        e.preventDefault();\r\n        if (mediaFile) {\r\n            const newMedia = {\r\n                file: URL.createObjectURL(mediaFile), // Create a URL for the uploaded file\r\n                type: mediaType,\r\n            };\r\n            setMedia([...media, newMedia]);\r\n            setMediaFile(null); // Reset the file input after upload\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"photos-video-container\">\r\n            <h2>Upload Photos and Videos</h2>\r\n            {/* Check if the user is an admin */}\r\n            {isAdmin ? (\r\n                <form onSubmit={handleUpload} className=\"upload-form\">\r\n                    {error && <p className=\"error-message\">{error}</p>}\r\n                    <div>\r\n                        <label>Media Type:</label>\r\n                        <select value={mediaType} onChange={handleTypeChange}>\r\n                            <option value=\"image\">Image</option>\r\n                            <option value=\"video\">Video</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label>{mediaType === 'image' ? 'Upload Image' : 'Upload Video'}:</label>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept={mediaType === 'image' ? 'image/*' : 'video/*'}\r\n                            onChange={handleFileChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {mediaFile && (\r\n                        <div className=\"file-preview\">\r\n                            {mediaType === 'image' ? (\r\n                                <img src={URL.createObjectURL(mediaFile)} alt=\"Preview\" className=\"preview-image\" />\r\n                            ) : (\r\n                                <video controls className=\"preview-video\">\r\n                                    <source src={URL.createObjectURL(mediaFile)} type={mediaFile.type} />\r\n                                    Your browser does not support the video tag.\r\n                                </video>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    <button type=\"submit\" className=\"upload-button\">Upload</button>\r\n                </form>\r\n            ) : (\r\n                <p>You must be an admin to upload media.</p>\r\n            )}\r\n\r\n            <h2>Uploaded Media</h2>\r\n            <div className=\"media-list\">\r\n                {media.map((item, index) => (\r\n                    <div key={index} className=\"media\">\r\n                        {item.type === 'image' ? (\r\n                            <img src={item.file} alt={`Uploaded Media ${index}`} className=\"media-image\" />\r\n                        ) : (\r\n                            <video controls className=\"media-video\">\r\n                                <source src={item.file} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhotosVideo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}