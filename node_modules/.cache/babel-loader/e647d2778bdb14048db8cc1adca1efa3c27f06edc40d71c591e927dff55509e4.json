{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\king\\\\OneDrive\\\\Desktop\\\\edoculturalassociationitaly\\\\src\\\\events.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [events, setEvents] = useState([]); // Array to hold events\n  const [eventName, setEventName] = useState(''); // State for event name\n  const [eventDate, setEventDate] = useState(''); // State for event date\n  const [eventDescription, setEventDescription] = useState(''); // State for event description\n  const [eventImages, setEventImages] = useState([]); // State for event images\n\n  // Function to handle adding a new event\n  const handleAddEvent = () => {\n    const newEvent = {\n      id: Date.now(),\n      // Unique ID for the event\n      name: eventName,\n      date: eventDate,\n      description: eventDescription,\n      images: eventImages\n    };\n    setEvents([...events, newEvent]); // Add the new event to the events array\n    resetForm(); // Reset the form fields\n  };\n\n  // Function to reset form fields\n  const resetForm = () => {\n    setEventName('');\n    setEventDate('');\n    setEventDescription('');\n    setEventImages([]);\n  };\n\n  // Function to handle removing an event\n  const handleRemoveEvent = id => {\n    setEvents(events.filter(event => event.id !== id)); // Filter out the event to remove\n  };\n\n  // Function to handle modifying an event\n  const handleModifyEvent = id => {\n    const eventToModify = events.find(event => event.id === id);\n    if (eventToModify) {\n      setEventName(eventToModify.name);\n      setEventDate(eventToModify.date);\n      setEventDescription(eventToModify.description);\n      setEventImages(eventToModify.images);\n      handleRemoveEvent(id); // Remove the event being modified\n    }\n  };\n\n  // Function to handle image upload\n  const handleImageUpload = e => {\n    const files = Array.from(e.target.files);\n    setEventImages([...eventImages, ...files]); // Add the uploaded files to the images state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Event Name\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: eventDate,\n        onChange: e => setEventDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Event Description\",\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddEvent,\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          margin: '10px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", event.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), event.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Images:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), event.images.map((file, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(file),\n            alt: `Event for ${event.name} on ${event.date}` // Updated alt text\n            ,\n            style: {\n              width: '100px',\n              height: '100px',\n              margin: '5px'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleModifyEvent(event.id),\n          children: \"Modify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveEvent(event.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Events, \"qHKmePt3P0KeuJezTWwd9pbIYFc=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Events","_s","events","setEvents","eventName","setEventName","eventDate","setEventDate","eventDescription","setEventDescription","eventImages","setEventImages","handleAddEvent","newEvent","id","Date","now","name","date","description","images","resetForm","handleRemoveEvent","filter","event","handleModifyEvent","eventToModify","find","handleImageUpload","e","files","Array","from","target","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","required","multiple","onClick","map","style","border","padding","margin","length","file","index","src","URL","createObjectURL","alt","width","height","_c","$RefreshReg$"],"sources":["C:/Users/king/OneDrive/Desktop/edoculturalassociationitaly/src/events.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Events() {\r\n    const [events, setEvents] = useState([]); // Array to hold events\r\n    const [eventName, setEventName] = useState(''); // State for event name\r\n    const [eventDate, setEventDate] = useState(''); // State for event date\r\n    const [eventDescription, setEventDescription] = useState(''); // State for event description\r\n    const [eventImages, setEventImages] = useState([]); // State for event images\r\n\r\n    // Function to handle adding a new event\r\n    const handleAddEvent = () => {\r\n        const newEvent = {\r\n            id: Date.now(), // Unique ID for the event\r\n            name: eventName,\r\n            date: eventDate,\r\n            description: eventDescription,\r\n            images: eventImages,\r\n        };\r\n        setEvents([...events, newEvent]); // Add the new event to the events array\r\n        resetForm(); // Reset the form fields\r\n    };\r\n\r\n    // Function to reset form fields\r\n    const resetForm = () => {\r\n        setEventName('');\r\n        setEventDate('');\r\n        setEventDescription('');\r\n        setEventImages([]);\r\n    };\r\n\r\n    // Function to handle removing an event\r\n    const handleRemoveEvent = (id) => {\r\n        setEvents(events.filter(event => event.id !== id)); // Filter out the event to remove\r\n    };\r\n\r\n    // Function to handle modifying an event\r\n    const handleModifyEvent = (id) => {\r\n        const eventToModify = events.find(event => event.id === id);\r\n        if (eventToModify) {\r\n            setEventName(eventToModify.name);\r\n            setEventDate(eventToModify.date);\r\n            setEventDescription(eventToModify.description);\r\n            setEventImages(eventToModify.images);\r\n            handleRemoveEvent(id); // Remove the event being modified\r\n        }\r\n    };\r\n\r\n    // Function to handle image upload\r\n    const handleImageUpload = (e) => {\r\n        const files = Array.from(e.target.files);\r\n        setEventImages([...eventImages, ...files]); // Add the uploaded files to the images state\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Upcoming Events</h2>\r\n            <div>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Event Name\" \r\n                    value={eventName} \r\n                    onChange={(e) => setEventName(e.target.value)} \r\n                    required \r\n                />\r\n                <input \r\n                    type=\"date\" \r\n                    value={eventDate} \r\n                    onChange={(e) => setEventDate(e.target.value)} \r\n                    required \r\n                />\r\n                <textarea \r\n                    placeholder=\"Event Description\" \r\n                    value={eventDescription} \r\n                    onChange={(e) => setEventDescription(e.target.value)} \r\n                    required \r\n                />\r\n                <input \r\n                    type=\"file\" \r\n                    multiple \r\n                    onChange={handleImageUpload} \r\n                />\r\n                <button onClick={handleAddEvent}>Add Event</button>\r\n            </div>\r\n\r\n            <div>\r\n                {events.map((event) => (\r\n                    <div key={event.id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0' }}>\r\n                        <h4>{event.name}</h4>\r\n                        <p>Date: {event.date}</p>\r\n                        <p>Description: {event.description}</p>\r\n                        {event.images.length > 0 && (\r\n                            <div>\r\n                                <h5>Images:</h5>\r\n                                {event.images.map((file, index) => (\r\n                                    <img \r\n                                        key={index} \r\n                                        src={URL.createObjectURL(file)} \r\n                                        alt={`Event for ${event.name} on ${event.date}`} // Updated alt text\r\n                                        style={{ width: '100px', height: '100px', margin: '5px' }} \r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        <button onClick={() => handleModifyEvent(event.id)}>Modify</button>\r\n                        <button onClick={() => handleRemoveEvent(event.id)}>Remove</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Events;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}