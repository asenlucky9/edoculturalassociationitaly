{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';// Create the AuthContext\nconst AuthContext=createContext();// AuthProvider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[error,setError]=useState(null);const[loginSuccess,setLoginSuccess]=useState(false);const[events,setEvents]=useState([]);const[members,setMembers]=useState([]);// Load saved user, events, and members on component mount\nuseEffect(()=>{const savedUser=JSON.parse(localStorage.getItem(\"user\"));const savedEvents=JSON.parse(localStorage.getItem(\"events\"))||[];const savedMembers=JSON.parse(localStorage.getItem(\"members\"))||[];if(savedUser){setUser(savedUser);setLoginSuccess(true);}setEvents(savedEvents);setMembers(savedMembers);},[]);// Save events and members to local storage when they change\nuseEffect(()=>{localStorage.setItem(\"events\",JSON.stringify(events));},[events]);useEffect(()=>{localStorage.setItem(\"members\",JSON.stringify(members));},[members]);// Login function\nconst login=(username,password,rememberMe)=>{return new Promise((resolve,reject)=>{if(!username||!password){setError('Username and password are required.');reject(new Error('Username and password are required.'));return;}if(username==='admin'&&password==='admin'){const loggedInUser={name:'Admin',role:'admin'};setUser(loggedInUser);setError(null);setLoginSuccess(true);if(rememberMe){localStorage.setItem(\"user\",JSON.stringify(loggedInUser));}else{sessionStorage.setItem(\"user\",JSON.stringify(loggedInUser));}resolve();}else{setError('Invalid username or password');reject(new Error('Invalid credentials'));}});};// Logout function\nconst logout=()=>{setUser(null);setError(null);setLoginSuccess(false);localStorage.removeItem(\"user\");sessionStorage.removeItem(\"user\");};// Function to add events\nconst addEvent=event=>{// Create a URL for the image if it exists\nconst eventWithImageUrl={...event,picture:event.picture?URL.createObjectURL(event.picture):null};setEvents(prevEvents=>[...prevEvents,eventWithImageUrl]);};// Function to remove events\nconst removeEvent=eventToRemove=>{// Clean up the URL object if it exists\nif(eventToRemove.picture){URL.revokeObjectURL(eventToRemove.picture);// Prevent memory leaks\n}setEvents(prevEvents=>prevEvents.filter(event=>event!==eventToRemove));};// Function to add members\nconst addMember=member=>{setMembers(prevMembers=>[...prevMembers,member]);};return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:{user,login,logout,error,loginSuccess,events,addEvent,removeEvent,members,addMember}},children);};// Custom hook to use the AuthContext\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};// Sample Login Form Component\nconst LoginForm=()=>{const{login,error}=useAuth();const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[rememberMe,setRememberMe]=useState(false);const handleSubmit=e=>{e.preventDefault();login(username,password,rememberMe).then(()=>{// Handle successful login (redirect, etc.)\nconsole.log('Login successful!');}).catch(err=>{console.error(err);});};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit,className:\"login-form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value),className:\"login-input\",required:true}),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),className:\"login-input\",required:true}),error&&/*#__PURE__*/React.createElement(\"p\",{className:\"error-message\"},error)),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:rememberMe,onChange:e=>setRememberMe(e.target.checked)}),\" Remember Me\"),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Login\"));};export default LoginForm;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","AuthContext","AuthProvider","_ref","children","user","setUser","error","setError","loginSuccess","setLoginSuccess","events","setEvents","members","setMembers","savedUser","JSON","parse","localStorage","getItem","savedEvents","savedMembers","setItem","stringify","login","username","password","rememberMe","Promise","resolve","reject","Error","loggedInUser","name","role","sessionStorage","logout","removeItem","addEvent","event","eventWithImageUrl","picture","URL","createObjectURL","prevEvents","removeEvent","eventToRemove","revokeObjectURL","filter","addMember","member","prevMembers","createElement","Provider","value","useAuth","context","LoginForm","setUsername","setPassword","setRememberMe","handleSubmit","e","preventDefault","then","console","log","catch","err","onSubmit","className","type","placeholder","onChange","target","required","checked"],"sources":["C:/Users/king/OneDrive/Desktop/edoculturalassociationitaly/src/AuthProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loginSuccess, setLoginSuccess] = useState(false);\r\n    const [events, setEvents] = useState([]);\r\n    const [members, setMembers] = useState([]);\r\n\r\n    // Load saved user, events, and members on component mount\r\n    useEffect(() => {\r\n        const savedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        const savedEvents = JSON.parse(localStorage.getItem(\"events\")) || [];\r\n        const savedMembers = JSON.parse(localStorage.getItem(\"members\")) || [];\r\n\r\n        if (savedUser) {\r\n            setUser(savedUser);\r\n            setLoginSuccess(true);\r\n        }\r\n        setEvents(savedEvents);\r\n        setMembers(savedMembers);\r\n    }, []);\r\n\r\n    // Save events and members to local storage when they change\r\n    useEffect(() => {\r\n        localStorage.setItem(\"events\", JSON.stringify(events));\r\n    }, [events]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"members\", JSON.stringify(members));\r\n    }, [members]);\r\n\r\n    // Login function\r\n    const login = (username, password, rememberMe) => {\r\n        return new Promise((resolve, reject) => {\r\n            if (!username || !password) {\r\n                setError('Username and password are required.');\r\n                reject(new Error('Username and password are required.'));\r\n                return;\r\n            }\r\n            if (username === 'admin' && password === 'admin') {\r\n                const loggedInUser = { name: 'Admin', role: 'admin' };\r\n                setUser(loggedInUser);\r\n                setError(null);\r\n                setLoginSuccess(true);\r\n\r\n                if (rememberMe) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n                } else {\r\n                    sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n                }\r\n\r\n                resolve();\r\n            } else {\r\n                setError('Invalid username or password');\r\n                reject(new Error('Invalid credentials'));\r\n            }\r\n        });\r\n    };\r\n\r\n    // Logout function\r\n    const logout = () => {\r\n        setUser(null);\r\n        setError(null);\r\n        setLoginSuccess(false);\r\n        localStorage.removeItem(\"user\");\r\n        sessionStorage.removeItem(\"user\");\r\n    };\r\n\r\n    // Function to add events\r\n    const addEvent = (event) => {\r\n        // Create a URL for the image if it exists\r\n        const eventWithImageUrl = {\r\n            ...event,\r\n            picture: event.picture ? URL.createObjectURL(event.picture) : null,\r\n        };\r\n        setEvents((prevEvents) => [...prevEvents, eventWithImageUrl]);\r\n    };\r\n\r\n    // Function to remove events\r\n    const removeEvent = (eventToRemove) => {\r\n        // Clean up the URL object if it exists\r\n        if (eventToRemove.picture) {\r\n            URL.revokeObjectURL(eventToRemove.picture); // Prevent memory leaks\r\n        }\r\n        setEvents((prevEvents) => prevEvents.filter(event => event !== eventToRemove));\r\n    };\r\n\r\n    // Function to add members\r\n    const addMember = (member) => {\r\n        setMembers((prevMembers) => [...prevMembers, member]);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ \r\n            user, \r\n            login, \r\n            logout, \r\n            error, \r\n            loginSuccess, \r\n            events, \r\n            addEvent, \r\n            removeEvent, \r\n            members, \r\n            addMember \r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\n// Sample Login Form Component\r\nconst LoginForm = () => {\r\n    const { login, error } = useAuth();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        login(username, password, rememberMe)\r\n            .then(() => {\r\n                // Handle successful login (redirect, etc.)\r\n                console.log('Login successful!');\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    className=\"login-input\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"login-input\"\r\n                    required\r\n                />\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n            </div>\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={rememberMe}\r\n                    onChange={(e) => setRememberMe(e.target.checked)}\r\n                /> Remember Me\r\n            </label>\r\n            <button type=\"submit\">Login</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}