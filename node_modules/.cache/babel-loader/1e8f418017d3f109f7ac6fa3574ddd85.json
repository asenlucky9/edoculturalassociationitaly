{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\king\\\\OneDrive\\\\Desktop\\\\edoculturalassociationitaly\\\\src\\\\photosVideo.js\";\nimport React, { useState } from 'react';\nconst PhotosVideo = () => {\n  const [media, setMedia] = useState([]);\n  const [mediaFile, setMediaFile] = useState(null);\n  const [mediaType, setMediaType] = useState('image'); // Default type is image\n  const [error, setError] = useState(''); // For error messages\n\n  // Simulating admin login state; change to true to test as admin\n  const isAdmin = false; // Change this to true to simulate an admin login\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      // Check file type\n      const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];\n      const validVideoTypes = ['video/mp4', 'video/webm'];\n      if (mediaType === 'image' && !validImageTypes.includes(file.type)) {\n        setError('Please upload a valid image file (JPEG, PNG, GIF).');\n        setMediaFile(null);\n        return;\n      } else if (mediaType === 'video' && !validVideoTypes.includes(file.type)) {\n        setError('Please upload a valid video file (MP4, WEBM).');\n        setMediaFile(null);\n        return;\n      }\n      setError(''); // Clear error if file is valid\n      setMediaFile(file);\n    }\n  };\n  const handleTypeChange = e => {\n    setMediaType(e.target.value);\n    setMediaFile(null); // Reset the file input when type changes\n  };\n  const handleUpload = e => {\n    e.preventDefault();\n    if (mediaFile) {\n      const newMedia = {\n        file: URL.createObjectURL(mediaFile),\n        // Create a URL for the uploaded file\n        type: mediaType\n      };\n      setMedia([...media, newMedia]);\n      setMediaFile(null); // Reset the file input after upload\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"photos-video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Upload Photos and Videos\"), isAdmin ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpload,\n    className: \"upload-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Media Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: mediaType,\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, \"Video\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, mediaType === 'image' ? 'Upload Image' : 'Upload Video', \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: mediaType === 'image' ? 'image/*' : 'video/*',\n    onChange: handleFileChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })), mediaFile && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, mediaType === 'image' ? /*#__PURE__*/React.createElement(\"img\", {\n    src: URL.createObjectURL(mediaFile),\n    alt: \"Preview\",\n    className: \"preview-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(\"video\", {\n    controls: true,\n    className: \"preview-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: URL.createObjectURL(mediaFile),\n    type: mediaFile.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }), \"Your browser does not support the video tag.\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"upload-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Upload\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"You must be an admin to upload media.\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Uploaded Media\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, media.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, item.type === 'image' ? /*#__PURE__*/React.createElement(\"img\", {\n    src: item.file,\n    alt: `Uploaded Media ${index}`,\n    className: \"media-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(\"video\", {\n    controls: true,\n    className: \"media-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: item.file,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }), \"Your browser does not support the video tag.\")))));\n};\nexport default PhotosVideo;","map":{"version":3,"names":["React","useState","PhotosVideo","media","setMedia","mediaFile","setMediaFile","mediaType","setMediaType","error","setError","isAdmin","handleFileChange","e","file","target","files","validImageTypes","validVideoTypes","includes","type","handleTypeChange","value","handleUpload","preventDefault","newMedia","URL","createObjectURL","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","accept","required","src","alt","controls","map","item","index","key"],"sources":["C:/Users/king/OneDrive/Desktop/edoculturalassociationitaly/src/photosVideo.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst PhotosVideo = () => {\r\n    const [media, setMedia] = useState([]);\r\n    const [mediaFile, setMediaFile] = useState(null);\r\n    const [mediaType, setMediaType] = useState('image'); // Default type is image\r\n    const [error, setError] = useState(''); // For error messages\r\n\r\n    // Simulating admin login state; change to true to test as admin\r\n    const isAdmin = false; // Change this to true to simulate an admin login\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            // Check file type\r\n            const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n            const validVideoTypes = ['video/mp4', 'video/webm'];\r\n\r\n            if (mediaType === 'image' && !validImageTypes.includes(file.type)) {\r\n                setError('Please upload a valid image file (JPEG, PNG, GIF).');\r\n                setMediaFile(null);\r\n                return;\r\n            } else if (mediaType === 'video' && !validVideoTypes.includes(file.type)) {\r\n                setError('Please upload a valid video file (MP4, WEBM).');\r\n                setMediaFile(null);\r\n                return;\r\n            }\r\n            setError(''); // Clear error if file is valid\r\n            setMediaFile(file);\r\n        }\r\n    };\r\n\r\n    const handleTypeChange = (e) => {\r\n        setMediaType(e.target.value);\r\n        setMediaFile(null); // Reset the file input when type changes\r\n    };\r\n\r\n    const handleUpload = (e) => {\r\n        e.preventDefault();\r\n        if (mediaFile) {\r\n            const newMedia = {\r\n                file: URL.createObjectURL(mediaFile), // Create a URL for the uploaded file\r\n                type: mediaType,\r\n            };\r\n            setMedia([...media, newMedia]);\r\n            setMediaFile(null); // Reset the file input after upload\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"photos-video-container\">\r\n            <h2>Upload Photos and Videos</h2>\r\n            {/* Check if the user is an admin */}\r\n            {isAdmin ? (\r\n                <form onSubmit={handleUpload} className=\"upload-form\">\r\n                    {error && <p className=\"error-message\">{error}</p>}\r\n                    <div>\r\n                        <label>Media Type:</label>\r\n                        <select value={mediaType} onChange={handleTypeChange}>\r\n                            <option value=\"image\">Image</option>\r\n                            <option value=\"video\">Video</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label>{mediaType === 'image' ? 'Upload Image' : 'Upload Video'}:</label>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept={mediaType === 'image' ? 'image/*' : 'video/*'}\r\n                            onChange={handleFileChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {mediaFile && (\r\n                        <div className=\"file-preview\">\r\n                            {mediaType === 'image' ? (\r\n                                <img src={URL.createObjectURL(mediaFile)} alt=\"Preview\" className=\"preview-image\" />\r\n                            ) : (\r\n                                <video controls className=\"preview-video\">\r\n                                    <source src={URL.createObjectURL(mediaFile)} type={mediaFile.type} />\r\n                                    Your browser does not support the video tag.\r\n                                </video>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    <button type=\"submit\" className=\"upload-button\">Upload</button>\r\n                </form>\r\n            ) : (\r\n                <p>You must be an admin to upload media.</p>\r\n            )}\r\n\r\n            <h2>Uploaded Media</h2>\r\n            <div className=\"media-list\">\r\n                {media.map((item, index) => (\r\n                    <div key={index} className=\"media\">\r\n                        {item.type === 'image' ? (\r\n                            <img src={item.file} alt={`Uploaded Media ${index}`} className=\"media-image\" />\r\n                        ) : (\r\n                            <video controls className=\"media-video\">\r\n                                <source src={item.file} type=\"video/mp4\" />\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhotosVideo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}