{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\king\\\\OneDrive\\\\Desktop\\\\edoculturalassociationitaly\\\\src\\\\AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const [loginSuccess, setLoginSuccess] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [members, setMembers] = useState([]);\n\n  // Load saved user, events, and members on component mount\n  useEffect(() => {\n    const savedUser = JSON.parse(localStorage.getItem(\"user\"));\n    const savedEvents = JSON.parse(localStorage.getItem(\"events\")) || [];\n    const savedMembers = JSON.parse(localStorage.getItem(\"members\")) || [];\n    if (savedUser) {\n      setUser(savedUser);\n      setLoginSuccess(true);\n    }\n    setEvents(savedEvents);\n    setMembers(savedMembers);\n  }, []);\n\n  // Save events and members to local storage when they change\n  useEffect(() => {\n    localStorage.setItem(\"events\", JSON.stringify(events));\n  }, [events]);\n  useEffect(() => {\n    localStorage.setItem(\"members\", JSON.stringify(members));\n  }, [members]);\n\n  // Login function\n  const login = (username, password, rememberMe) => {\n    return new Promise((resolve, reject) => {\n      if (username === 'admin' && password === 'admin') {\n        const loggedInUser = {\n          name: 'Admin',\n          role: 'admin'\n        };\n        setUser(loggedInUser);\n        setError(null);\n        setLoginSuccess(true);\n        if (rememberMe) {\n          localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n        } else {\n          sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n        }\n        resolve();\n      } else {\n        setError('Invalid username or password');\n        reject(new Error('Invalid credentials'));\n      }\n    });\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    setError(null);\n    setLoginSuccess(false);\n    localStorage.removeItem(\"user\");\n    sessionStorage.removeItem(\"user\");\n  };\n\n  // Function to add events\n  const addEvent = event => {\n    // Create a URL for the image if it exists\n    const eventWithImageUrl = {\n      ...event,\n      picture: event.image ? URL.createObjectURL(event.image) : null\n    };\n    setEvents(prevEvents => [...prevEvents, eventWithImageUrl]);\n  };\n\n  // Function to remove events\n  const removeEvent = eventToRemove => {\n    setEvents(prevEvents => prevEvents.filter(event => event !== eventToRemove));\n  };\n\n  // Function to add members\n  const addMember = member => {\n    setMembers(prevMembers => [...prevMembers, member]);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      error,\n      loginSuccess,\n      events,\n      addEvent,\n      removeEvent,\n      members,\n      addMember\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"dCXYh2joMEB7eq8U2Ook+/8vSLc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","error","setError","loginSuccess","setLoginSuccess","events","setEvents","members","setMembers","savedUser","JSON","parse","localStorage","getItem","savedEvents","savedMembers","setItem","stringify","login","username","password","rememberMe","Promise","resolve","reject","loggedInUser","name","role","sessionStorage","Error","logout","removeItem","addEvent","event","eventWithImageUrl","picture","image","URL","createObjectURL","prevEvents","removeEvent","eventToRemove","filter","addMember","member","prevMembers","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/king/OneDrive/Desktop/edoculturalassociationitaly/src/AuthProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loginSuccess, setLoginSuccess] = useState(false);\r\n    const [events, setEvents] = useState([]);\r\n    const [members, setMembers] = useState([]);\r\n\r\n    // Load saved user, events, and members on component mount\r\n    useEffect(() => {\r\n        const savedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        const savedEvents = JSON.parse(localStorage.getItem(\"events\")) || [];\r\n        const savedMembers = JSON.parse(localStorage.getItem(\"members\")) || [];\r\n\r\n        if (savedUser) {\r\n            setUser(savedUser);\r\n            setLoginSuccess(true);\r\n        }\r\n        setEvents(savedEvents);\r\n        setMembers(savedMembers);\r\n    }, []);\r\n\r\n    // Save events and members to local storage when they change\r\n    useEffect(() => {\r\n        localStorage.setItem(\"events\", JSON.stringify(events));\r\n    }, [events]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"members\", JSON.stringify(members));\r\n    }, [members]);\r\n\r\n    // Login function\r\n    const login = (username, password, rememberMe) => {\r\n        return new Promise((resolve, reject) => {\r\n            if (username === 'admin' && password === 'admin') {\r\n                const loggedInUser = { name: 'Admin', role: 'admin' };\r\n                setUser(loggedInUser);\r\n                setError(null);\r\n                setLoginSuccess(true);\r\n\r\n                if (rememberMe) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n                } else {\r\n                    sessionStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n                }\r\n\r\n                resolve();\r\n            } else {\r\n                setError('Invalid username or password');\r\n                reject(new Error('Invalid credentials'));\r\n            }\r\n        });\r\n    };\r\n\r\n    // Logout function\r\n    const logout = () => {\r\n        setUser(null);\r\n        setError(null);\r\n        setLoginSuccess(false);\r\n        localStorage.removeItem(\"user\");\r\n        sessionStorage.removeItem(\"user\");\r\n    };\r\n\r\n    // Function to add events\r\n    const addEvent = (event) => {\r\n        // Create a URL for the image if it exists\r\n        const eventWithImageUrl = {\r\n            ...event,\r\n            picture: event.image ? URL.createObjectURL(event.image) : null,\r\n        };\r\n        setEvents((prevEvents) => [...prevEvents, eventWithImageUrl]);\r\n    };\r\n\r\n    // Function to remove events\r\n    const removeEvent = (eventToRemove) => {\r\n        setEvents((prevEvents) => prevEvents.filter(event => event !== eventToRemove));\r\n    };\r\n\r\n    // Function to add members\r\n    const addMember = (member) => {\r\n        setMembers((prevMembers) => [...prevMembers, member]);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ \r\n            user, \r\n            login, \r\n            logout, \r\n            error, \r\n            loginSuccess, \r\n            events, \r\n            addEvent, \r\n            removeEvent, \r\n            members, \r\n            addMember \r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}